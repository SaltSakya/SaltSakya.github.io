import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as c,c as u,d as s,a as e,b as l,e as t,w as n,f as d}from"./app-2685e7e5.js";const _={},p=e("p",null,"一个逻辑层和表现层分离的Gui框架",-1),m=d('<p>研究豪哥给的小地图框架，分为逻辑层和表现层，过去使用的是 UGUI，现在需要迁移到 FairyGUI，觉得设计思路不错，记录一下。</p><details class="hint-container details"><summary>我的待办</summary><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 3D UI Manager</label></li></ul><blockquote><p>需要基于FairyGUI制作一个3DUI的Manager，支持后续的各种地图标点、血条</p></blockquote><blockquote><ol><li>数据：3DUI的字典，key为3DUI的ID，Value为3DUI的Panel、3D位置信息、系统类型等信息。考虑到会有不同的系统接入，需要有一个类似<code>Dictionary&lt;string, List&lt;string&gt;&gt;</code>的结构便于各个系统查找数据</li><li>方法：创建、销毁、显示、隐藏UI、更新UI</li></ol></blockquote><blockquote><p>此外还需要一个3DUI的基类，需要将他的子类挂载到对应物体上</p></blockquote></details>',2),v={id:"设计需求",tabindex:"-1"},f=e("a",{class:"header-anchor",href:"#设计需求","aria-hidden":"true"},"#",-1),h=d('<h2 id="框架设计" tabindex="-1"><a class="header-anchor" href="#框架设计" aria-hidden="true">#</a> 框架设计</h2><ul><li><p><strong>概念</strong></p><ul><li><p><strong>地图</strong>：地图中，地图的部分</p><ul><li>地图可以位移、旋转、缩放，隐藏显示；</li><li>实际存在的可能不止一张地图；</li><li>地图同样负责管理其上的<strong>标识</strong></li></ul></li><li><p><strong>标识</strong>：地图上的各类型标记，如玩家位置、敌人位置、宝箱位置等</p><ul><li>标识可以位移、旋转、缩放，隐藏显示，切换，或播放特定效果等；</li><li>标识的行为和表现可能多种多样，因此可以让子类继承标识类，来实现不同的逻辑；</li></ul></li></ul></li><li><p><strong>实现</strong></p></li></ul><p>为了解耦逻辑和表现，分为<strong>逻辑层</strong>和<strong>表现层</strong>。</p><ul><li><code>NavMapManager</code> 为逻辑层地图</li><li><code>NavMapUI</code> 为表现层地图</li><li><code>NavMarker</code> 为逻辑层标识</li><li><code>NavMarkerUI</code> 为表现层标识</li></ul>',4),k={id:"框架主体",tabindex:"-1"},M=e("a",{class:"header-anchor",href:"#框架主体","aria-hidden":"true"},"#",-1),y={id:"navmapmanager",tabindex:"-1"},b=e("a",{class:"header-anchor",href:"#navmapmanager","aria-hidden":"true"},"#",-1),I=e("blockquote",null,[e("p",null,[l("继承关系："),e("code",null,"NavMapManager"),l("："),e("code",null,"MonoBehaviourBase"),l("："),e("code",null,"MonoBehaviour")])],-1),g={class:"hint-container details"},U=e("summary",null,"变量",-1),x=e("code",null,"IsInit",-1),C=e("code",null,"HaveNavMapUI",-1),N=e("code",null,"m_NavMapUI",-1),w=e("code",null,"NavMapUI",-1),B=e("blockquote",null,[e("p",null,[l("返回 "),e("code",null,"m_NavMapUI"),l("，若为空，则返回 "),e("code",null,"FindObjectOfType<NavMapUI>()")])],-1),T=e("code",null,"m_RemoveMarkersCached",-1),q={class:"hint-container details"},O=e("summary",null,"静态信息",-1),P=e("code",null,"MapUIType",-1),R=e("code",null,"HaveNavMapConfig",-1),G=e("code",null,"NavMapConfigCur",-1),S=e("code",null,"CanvasSize",-1),A=e("code",null,"CSAngle",-1),D=e("code",null,"AngleOffset",-1),V=e("code",null,"CanvasCenterOffset",-1),j=e("code",null,"CanvasZoom",-1),L=e("code",null,"CanvasMinBounds",-1),F=e("code",null,"CanvasMaxBounds",-1),z=e("code",null,"OffsetToWidgetCenter",-1),W=e("code",null,"LimitCanvasPositionInBounds",-1),H=e("code",null,"LimitWidgetInBounds",-1),Z=e("code",null,"LimitWorldLocationInBounds",-1),E={class:"hint-container details"},Y=e("summary",null,"生命周期",-1),J=e("code",null,"Update",-1),K=e("blockquote",null,[e("p",null,[l("调用 "),e("code",null,"OnUpdate(Time.deltaTime)")])],-1),Q={class:"hint-container details"},X=e("summary",null,"方法",-1),$=e("code",null,"Init()",-1),ee=e("blockquote",null,[e("ul",null,[e("li",null,[l("若 "),e("code",null,"IsInit"),l(" 为 "),e("code",null,"false"),l("，调用 "),e("code",null,"InitConfig()")])])],-1),le=e("code",null,"CreateMap()",-1),te=e("blockquote",null,[e("ul",null,[e("li",null,"读取当前场景的配置"),e("li",null,[l("将当前场景配置保存至 "),e("code",null,"NavMapConfigCur")])])],-1),oe=e("code",null,"DestroyMap()",-1),ne=e("blockquote",null,[e("ul",null,[e("li",null,[l("令 "),e("code",null,"m_MarkerIdCounter = 0")]),e("li",null,[l("调用 "),e("code",null,"m_MarkersDic.Clear()")])])],-1),ae=e("code",null,"OnUpdate(float deltaTime)",-1),de=e("blockquote",null,[e("ul",null,[e("li",null,[l("对每一个 Marker 调用 "),e("code",null,"OnUpdate(deltaTime)")]),e("li",null,"当有需要移除的 Marker 时，逐个移除")])],-1),ie={class:"hint-container details"},re=e("summary",null,"Config",-1),ce={class:"hint-container details"},ue=e("summary",null,"事件",-1),se=e("code",null,"OnMarkerAdd",-1),_e=e("code",null,"OnMarkerRemove",-1),pe=d(`<h4 id="navmapui" tabindex="-1"><a class="header-anchor" href="#navmapui" aria-hidden="true">#</a> NavMapUI</h4><blockquote><p>继承关系：<code>NavMapUI</code>：<code>NavUIBase</code>：<code>MonoBehaviourBase</code>：<code>MonoBehaviour</code></p></blockquote><details class="hint-container details"><summary>预制体结构</summary><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>NavMapUI  
├── MiniMapRoot  
    ├── Map &lt;- \`img_Map\`  
    ├── MiniMap &lt;- \`rts_Minimap\`  
        ├── MarksRoot &lt;- \`rts_MarksRoot\`  
    ├── Fram  
    └── FramVignette
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h5 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> <strong>变量</strong></h5>`,4),me=e("code",null,"Image",-1),ve=e("code",null,"img_Map",-1),fe=e("code",null,"RectTransform",-1),he=e("code",null,"rts_MarksRoot",-1),ke=e("code",null,"RectTransform",-1),Me=e("code",null,"rts_Minimap",-1),ye=e("code",null,"List<NavMarkerConfig>",-1),be=e("code",null,"m_FsNavMarkerConfigs",-1),Ie=e("code",null,"MapUIType",-1),ge=e("code",null,"MapUIType",-1),Ue=e("code",null,"Vector2",-1),xe=e("code",null,"CanvasSize",-1),Ce=e("code",null,"float",-1),Ne=e("code",null,"CSAngle",-1),we=e("code",null,"float",-1),Be=e("code",null,"AngleOffset",-1),Te=e("code",null,"Vector2",-1),qe=e("code",null,"CanvasCenterOffset",-1),Oe=e("code",null,"Vector2",-1),Pe=e("code",null,"CanvasZoom",-1),Re=e("code",null,"Vector2",-1),Ge=e("code",null,"CanvasMinBounds",-1),Se=e("code",null,"Vector2",-1),Ae=e("code",null,"CanvasMaxBounds",-1),De=e("code",null,"bool",-1),Ve=e("code",null,"OffsetToWidgetCenter",-1),je=e("code",null,"bool",-1),Le=e("code",null,"LimitCanvasPositionInBounds",-1),Fe=e("code",null,"bool",-1),ze=e("code",null,"LimitWidgetInBounds",-1),We=e("code",null,"Dictionary<uint, NavMarkerUI>",-1),He=e("code",null,"m_NavMarkerUIDic",-1),Ze=e("code",null,"Dictionary<Type, NavMarkerConfig>",-1),Ee=e("code",null,"m_FsNavMarkerConfigDic",-1),Ye=e("h5",{id:"方法",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#方法","aria-hidden":"true"},"#"),l(),e("strong",null,"方法")],-1),Je=e("code",null,"Awake()",-1),Ke=e("blockquote",null,[e("p",null,"有在编辑器内有配置标识时，若标识配置合法，则将其加入标识配置字典"),e("ul",null,[e("li",null,[l("有在编辑器内有配置标识：标识配置 "),e("code",null,"m_FsNavMarkerConfigs"),l(" 不为空 且 标识配置字典 "),e("code",null,"m_FsNavMarkerConfigDic"),l(" 为空")]),e("li",null,"标识配置合法：预制体是 MarkerUI、类型名是 NavMarker 或其子类")])],-1),Qe=e("code",null,"Start()",-1),Xe=d("<blockquote><ul><li><code>NavMapManager</code> 单例调用 <code>OnNavMapUICreate(this)</code></li><li>若编辑器内未配置标识根节点 <code>rts_MarksRoot</code> ，则主动寻找标识根节点</li><li></li><li>在 <code>NavMapManager</code> 的 <code>OnMarkerAdd</code> 和 <code>OnMarkerRemove</code> 委托中添加自身的 <code>OnMarkerAdd</code> 和 <code>OnMarkerRemove</code></li></ul></blockquote>",1),$e=e("code",null,"OnDestroy()",-1),el=d("<blockquote><ul><li>在 <code>NavMapManager</code> 的 <code>OnMarkerAdd</code> 和 <code>OnMarkerRemove</code> 委托中移除自身的 <code>OnMarkerAdd</code> 和 <code>OnMarkerRemove</code></li><li><code>NavMapManager</code> 单例调用 <code>OnNavMapUIDestroy(this)</code></li></ul></blockquote>",1),ll=e("code",null,"Update()",-1),tl=e("blockquote",null,[e("p",null,[l("更新旗下的每一个 "),e("code",null,"MarkerUI")]),e("ul",null,[e("li",null,[l("调用其 "),e("code",null,"OnUpdate(Time.deltaTime)")])])],-1),ol=e("code",null,"AddMarkerUI(NavMarker marker)",-1),nl=e("p",null,"添加一个 MarkerUI",-1),al=d("<ul><li>尝试获取 MarkerConfig，若获取失败，说明该地图配置中不显示此 marker，返回 <code>false</code></li><li>读取该类型的 Marker 所在的层级，查找该层级</li><li>若该层级不存在，在正确的位置创建该层级</li><li>在该层级下添加新的 MarkerUI，初始化，调用其 <code>Init</code> 和 <code>OnAdd</code> 方法</li><li>调用 Marker 的 <code>OnMarkerUIAdd</code> 方法</li><li>将 <code>{marker.Id : NavMarkerUI}</code> 键值对添加到 <code>m_NavMarkerUIDic</code></li></ul>",1),dl=e("code",null,"RemoveMarkerUI(NavMarker marker)",-1),il=d("<blockquote><p>移除一个 MarkerUI</p><ul><li>在 <code>m_NavMarkerUIDic</code> 中找出 MarkerUI</li><li>调用 Marker 的 <code>OnMarkerUIRemove</code> 方法</li><li>调用MarkerUI的 <code>Destroy</code> 方法</li><li>从 <code>m_NavMarkerUIDic</code> 中移除对应键值对</li></ul></blockquote>",1),rl=e("code",null,"OnMarkerAdd(NavMarker marker)",-1),cl=e("blockquote",null,[e("p",null,[l("调用自身 "),e("code",null,"AddMarkerUI(marker)")])],-1),ul=e("code",null,"OnMarkerRemove(NavMarker marker)",-1),sl=e("blockquote",null,[e("p",null,[l("调用自身 "),e("code",null,"RemoveMarkerUI(marker)")])],-1),_l=e("code",null,"GetMarkerUI(NavMarker marker, out NavMarkerUI markerUI)",-1),pl=e("blockquote",null,[e("p",null,[l("获取 Marker 对应的 MarkerUI 若 "),e("code",null,"marker"),l(" 为空，返回 "),e("code",null,"false"),l("，输出 "),e("code",null,"null"),l(" 否则调用 "),e("code",null,"m_NavMarkerUIDic.TryGetValue(marker.Id, out markerUI)")])],-1),ml=e("code",null,"GetMarkerUI(uint id, out NavMarkerUI markerUI)",-1),vl=e("blockquote",null,[e("p",null,[l("获取 Marker 对应的 MarkerUI 调用 "),e("code",null,"m_NavMarkerUIDic.TryGetValue(id, out markerUI)")])],-1),fl=e("code",null,"SetMarkerUI(NavMarker marker, Action<NavMarkerUI> handler)",-1),hl=e("blockquote",null,[e("p",null,"设置 MarkerUI"),e("ul",null,[e("li",null,[l("调用 "),e("code",null,"GetMarkerUI(marker, out NavMarkerUI markerUI)"),l(" 查找其 MarkerUI")]),e("li",null,[l("调用其 "),e("code",null,"handler(SetActive)")])])],-1),kl=e("code",null,"SetMarkerUIShow(NavMarker marker, bool show)",-1),Ml=e("blockquote",null,[e("p",null,"设置 MarkerUI 显示/隐藏"),e("ul",null,[e("li",null,[l("调用 "),e("code",null,"GetMarkerUI(marker, out NavMarkerUI markerUI)"),l(" 查找其 MarkerUI")]),e("li",null,[l("调用其 "),e("code",null,"GameObject"),l(" 的 "),e("code",null,"SetActive")])])],-1),yl=e("code",null,"SetMapImageColor(Color color)",-1),bl=e("blockquote",null,[e("p",null,"设置地图图片的颜色")],-1),Il=e("code",null,"GetNavMarkerConfigs()",-1),gl=e("blockquote",null,[e("p",null,[l("获取 NavMarker 配置 此处返回的是编辑器内的设置 "),e("code",null,"m_FsNavMarkerConfigs"),l(" 而不是 "),e("code",null,"m_FsNavMarkerConfigDic")])],-1),Ul=e("code",null,"GetNavMarkerConfig(NavMarker marker, out NavMarkerConfig config)",-1),xl=e("blockquote",null,[e("p",null,"获取标识配置"),e("ul",null,[e("li",null,[l("若 "),e("code",null,"marker"),l(" 为空，返回 "),e("code",null,"false"),l("，输出空配置")]),e("li",null,"否则调用最后一条重载")])],-1),Cl=e("code",null,"GetNavMarkerConfig<T>(out NavMarkerConfig config) where T : NavMarker",-1),Nl=e("blockquote",null,[e("p",null,"获取标识配置"),e("ul",null,[e("li",null,"调用最后一条重载")])],-1),wl=e("code",null,"GetNavMarkerConfig(Type type, out NavMarkerConfig config)",-1),Bl=d('<blockquote><p>获取标识配置</p><ul><li>若配置字典 <code>m_FsNavMarkerConfigDic</code> 中不包含 <code>type</code>，返回 <code>false</code>，输出空配置</li><li>否则若配置字典 <code>m_FsNavMarkerConfigDic</code> 包含 <code>type</code>，返回 <code>true</code>，输出对应配置</li></ul></blockquote><h4 id="navmarker" tabindex="-1"><a class="header-anchor" href="#navmarker" aria-hidden="true">#</a> NavMarker</h4><blockquote><p>继承关系：无继承</p></blockquote><h5 id="变量-1" tabindex="-1"><a class="header-anchor" href="#变量-1" aria-hidden="true">#</a> <strong>变量</strong></h5>',4),Tl=e("code",null,"Id",-1),ql=e("code",null,"IsActive",-1),Ol=e("code",null,"SetShow()",-1),Pl=e("code",null,"IsShow",-1),Rl=e("code",null,"Target",-1),Gl=e("code",null,"TargetPos",-1),Sl=e("code",null,"m_Duration",-1),Al=e("h5",{id:"委托",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#委托","aria-hidden":"true"},"#"),l(),e("strong",null,"委托")],-1),Dl=e("code",null,"m_OnMarkerUIAddCallback_NavMarkerCreaterParams",-1),Vl=e("code",null,"m_OnMarkerUIAddHandler",-1),jl=e("h5",{id:"方法-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#方法-1","aria-hidden":"true"},"#"),l(),e("strong",null,"方法")],-1),Ll=e("code",null,"Init(uint id)",-1),Fl=e("code",null,"SetInfo(Vector3 pos, Transform target = null, float duration = -1)",-1),zl=e("blockquote",null,[e("p",null,[l("设置 "),e("code",null,"m_Duration"),l(" 及 "),e("code",null,"Target"),l("/"),e("code",null,"TargetPos")])],-1),Wl=e("code",null,"OnRemove()",-1),Hl=e("code",null,"OnUpdate(float deltaTime)",-1),Zl=e("blockquote",null,[e("ul",null,[e("li",null,[l("若 "),e("code",null,"IsActive"),l(" 为 "),e("code",null,"true"),l("，更新")]),e("li",null,[l("若 "),e("code",null,"m_Duration"),l(" 小于等于 0，移除该 Marker")])])],-1),El=e("code",null,"OnMarkerUIAdd(NavMarkerUI markerUI)",-1),Yl=e("blockquote",null,[e("ul",null,[e("li",null,"调用两个委托")])],-1),Jl=e("code",null,"OnMarkerUIRemove(NavMarkerUI markerUI)",-1),Kl=e("code",null,"SetOnMarkerUIAddCallbackForNavMarkerCreatorParams(Action<NavMarkerUI> callback)",-1),Ql=e("code",null,"SetOnMarkerUIAddHandler(Action<NavMarker, NavMarkerUI> onMarkerUIAddHandler)",-1),Xl=e("code",null,"SetActiveAndShow(bool active)",-1),$l=e("blockquote",null,[e("ul",null,[e("li",null,[l("调用 "),e("code",null,"SetActive(bool active)"),l(" 和 "),e("code",null,"SetShow(bool show)")])])],-1),et=e("code",null,"SetActive(bool active)",-1),lt=e("code",null,"IsActive",-1),tt=e("code",null,"SetShow(bool show)",-1),ot=e("code",null,"IsShow",-1),nt=e("code",null,"SetIcon(Sprite sp)",-1),at=e("code",null,"SetSize(Vector2 size)",-1),dt=e("code",null,"SetIconColor(Color color)",-1),it=e("code",null,"SetMarkerUI(Action<NavMarkerUI> handlerFunc)",-1),rt=d('<blockquote><p>调用 <code>NavMapManager.Instance.SetMarkerUI(this, handlerFunc)</code></p></blockquote><h4 id="navmarkerui" tabindex="-1"><a class="header-anchor" href="#navmarkerui" aria-hidden="true">#</a> NavMarkerUI</h4><blockquote><p>继承关系：<code>NavMarkerUI</code>：<code>NavUIBase</code>：<code>MonoBehaviourBase</code>：<code>MonoBehaviour</code></p></blockquote><details class="hint-container details"><summary>预制体结构</summary><ul><li>NavMarker <ul><li>Icon &lt;- <code>gObj_Root</code></li></ul></li></ul></details><h5 id="变量-2" tabindex="-1"><a class="header-anchor" href="#变量-2" aria-hidden="true">#</a> <strong>变量</strong></h5>',5),ct=e("code",null,"gObj_Root",-1),ut=e("code",null,"img_Root",-1),st=e("code",null,"cg_Root",-1),_t=e("code",null,"rts_Root",-1),pt=e("code",null,"m_NavMapUI",-1),mt=e("code",null,"m_Marker",-1),vt=e("code",null,"m_TargetPos",-1),ft=e("code",null,"UpdateAngle",-1),ht=e("code",null,"m_Angle",-1),kt=e("h5",{id:"方法-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#方法-2","aria-hidden":"true"},"#"),l(),e("strong",null,"方法")],-1),Mt=e("code",null,"Init(NavMarker marker, NavMapUI navMapUI)",-1),yt=d("<blockquote><ul><li>设置自身的 <code>m_Marker</code> 和 <code>m_NavMapUI</code></li><li>载入自身的 <code>img_Root</code>、<code>cg_Root</code>、<code>rts_Root</code></li><li>初始化自身的 RectTransform</li><li>调用 <code>ResetSelf()</code></li></ul></blockquote>",1),bt=e("code",null,"ResetSelf()",-1),It=e("code",null,"OnAdd()",-1),gt=e("blockquote",null,[e("ul",null,[e("li",null,[l("调用 "),e("code",null,"ResetSelf(SetTargetPos(m_Marker.TargetPos))")])])],-1),Ut=e("code",null,"OnRemove()",-1),xt=e("code",null,"Destroy()",-1),Ct=e("blockquote",null,[e("ul",null,[e("li",null,[l("调用 "),e("code",null,"GameObject.Destroy(gameObject)")])])],-1),Nt=e("code",null,"OnUpdate(float deltaTime)",-1),wt=e("blockquote",null,[e("ul",null,[e("li",null,"若 Marker 世界位置变化过大，更新 UI 位置"),e("li",null,[l("若 "),e("code",null,"UpdateAngle"),l(" 为 "),e("code",null,"true"),l(" 且 Marker 旋转和当前旋转不一致，更新 UI 旋转")])])],-1),Bt=e("code",null,"SetTargetPos(Vector3 targetPos)",-1),Tt=e("code",null,"SetRootRotate(float angle)",-1),qt=e("blockquote",null,[e("p",null,[l("角度在 OnUpdate 中更新，但若 "),e("code",null,"UpdateAngle"),l(" 为 "),e("code",null,"false"),l("，则不会进行旋转")])],-1),Ot=e("code",null,"SetIcon(Sprite sp)",-1),Pt=e("code",null,"SetSize(Vector2 size)",-1),Rt=e("code",null,"SetIconColor(Color color)",-1),Gt=d(`<h3 id="其他类" tabindex="-1"><a class="header-anchor" href="#其他类" aria-hidden="true">#</a> 其他类</h3><h4 id="monobehaviourbase" tabindex="-1"><a class="header-anchor" href="#monobehaviourbase" aria-hidden="true">#</a> MonoBehaviourBase</h4><blockquote><p>继承关系：MonoBehaviourBase: MonoBehaviour</p></blockquote><p>该类逻辑简单，其实就是优化了 Unity 中通过 transform 和 gameobject 获取 Transform 和 GameObject的逻辑，因为默认的方法似乎是每次读取都会重新获取一次 Transform 和 GameObject，因而可能存在逻辑问题。而该类中将这些变量缓存下来，同时提供了直接获取 RectTransform 的接口</p><p>代码如下：</p><details class="hint-container details"><summary>MonoBehaviourBase</summary><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MonoBehaviourBase</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">MonoBehaviour</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> Transform TransformGet <span class="token comment">// 获取 Transform</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span>
            <span class="token punctuation">{</span> 
              <span class="token keyword">if</span> <span class="token punctuation">(</span>m_Transform <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> m_Transform <span class="token operator">=</span> transform<span class="token punctuation">;</span>
              <span class="token keyword">return</span> m_Transform<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token class-name">Transform</span> m_Transform<span class="token punctuation">;</span><span class="token comment">// 缓存的 Transform</span>

        <span class="token keyword">public</span> RectTransform RectTransformGet<span class="token comment">// 获取 RectTransform</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span> 
            <span class="token punctuation">{</span> 
              <span class="token keyword">if</span> <span class="token punctuation">(</span>m_RectTransform <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> m_RectTransform <span class="token operator">=</span> transform <span class="token keyword">as</span> <span class="token class-name">RectTransform</span><span class="token punctuation">;</span>
              <span class="token keyword">return</span> m_RectTransform<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token class-name">RectTransform</span> m_RectTransform<span class="token punctuation">;</span><span class="token comment">// 缓存的 RectTransform</span>

        <span class="token keyword">public</span> GameObject GameObjectGet<span class="token comment">// 获取 GameObject</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">get</span>
            <span class="token punctuation">{</span> 
              <span class="token keyword">if</span> <span class="token punctuation">(</span>m_GameObjectGet <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> m_GameObjectGet <span class="token operator">=</span> gameObject<span class="token punctuation">;</span>
              <span class="token keyword">return</span> m_GameObjectGet<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token class-name">GameObject</span> m_GameObjectGet<span class="token punctuation">;</span><span class="token comment">// 缓存的 GameObject</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h4 id="navuibase" tabindex="-1"><a class="header-anchor" href="#navuibase" aria-hidden="true">#</a> NavUIBase</h4><blockquote><p>继承关系：NavUIBase: MonoBehaviourBase: MonoBehaviour</p></blockquote><p>空类，应该只是为了给所有表现层 UI 一个基类。</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,10);function St(At,Dt){const o=i("Badge"),a=i("badge");return c(),u("div",null,[p,s(" more "),m,e("h2",v,[f,l(" 设计需求 "),t(o,{text:"未完成",type:"danger"})]),h,e("h3",k,[M,l(" 框架主体 "),t(o,{text:"施工中",type:"info"})]),e("h4",y,[b,l(" NavMapManager "),t(a,{text:"单例"})]),I,e("details",g,[U,e("ul",null,[e("li",null,[t(o,{type:"warning",vertical:"middle"},{default:n(()=>[l("保护")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("bool")]),_:1}),l(),x,l(),t(a,{text:"外部只读"}),l(" 是否已初始化")]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("bool")]),_:1}),l(),C,l(),t(a,{text:"外部只读"}),l(" 是否有导航地图 UI")]),e("li",null,[t(o,{type:"danger",vertical:"middle"},{default:n(()=>[l("私有")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("bool")]),_:1}),l(),N,l(" NavMapUI 的值")]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("NavMapUI")]),_:1}),l(),w,l(),t(a,{text:"外部只读"})])]),B,e("ul",null,[e("li",null,[t(o,{type:"danger",vertical:"middle"},{default:n(()=>[l("私有")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("只读")]),_:1}),t(o,{color:"MediumTurquoise",vertical:"middle"},{default:n(()=>[l("List<uint>")]),_:1}),l(),T])])]),e("details",q,[O,e("ul",null,[e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("静态")]),_:1}),t(o,{color:"YellowGreen",vertical:"middle"},{default:n(()=>[l("MapUIType")]),_:1}),l(),P,l(" 地图类型")]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("静态")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("bool")]),_:1}),l(),R,l(),t(a,{text:"外部只读"}),l(" 是否有有效的地图配置数据")]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("静态")]),_:1}),t(o,{color:"LimeGreen",vertical:"middle"},{default:n(()=>[l("NavMapWorldConfig")]),_:1}),l(),G,l(),t(a,{text:"外部只读"})]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("静态")]),_:1}),t(o,{color:"LimeGreen",vertical:"middle"},{default:n(()=>[l("Vector2")]),_:1}),l(),S]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("静态")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("bool")]),_:1}),l(),A]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("静态")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("bool")]),_:1}),l(),D]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("静态")]),_:1}),t(o,{color:"LimeGreen",vertical:"middle"},{default:n(()=>[l("Vector2")]),_:1}),l(),V]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("静态")]),_:1}),t(o,{color:"LimeGreen",vertical:"middle"},{default:n(()=>[l("Vector2")]),_:1}),l(),j]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("静态")]),_:1}),t(o,{color:"LimeGreen",vertical:"middle"},{default:n(()=>[l("Vector2")]),_:1}),l(),L]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("静态")]),_:1}),t(o,{color:"LimeGreen",vertical:"middle"},{default:n(()=>[l("Vector2")]),_:1}),l(),F]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("静态")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("bool")]),_:1}),l(),z]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("静态")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("bool")]),_:1}),l(),W]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("静态")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("bool")]),_:1}),l(),H]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("静态")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("bool")]),_:1}),l(),Z,l(),t(a,{text:"外部只读"})])])]),e("details",E,[Y,e("ul",null,[e("li",null,[t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),J,l(" 更新 deltatime")])]),K]),e("details",Q,[X,e("ul",null,[e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("虚")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),$,l(" 初始化")])]),ee,e("ul",null,[e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("虚")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),le,l("创建地图，请确保在进行 AddMarker 前先调用创建地图")])]),te,e("ul",null,[e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("虚")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),oe])]),ne,e("ul",null,[e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("虚")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),ae,l(" 进行更新")])]),de]),e("details",ie,[re,e("p",null,[t(o,{type:"danger",vertical:"middle"},{default:n(()=>[l("私有")]),_:1}),t(a,{text:"编辑器公开",vertical:"middle"}),l(" sadf")])]),e("details",ce,[ue,e("ul",null,[e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("静态")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("event")]),_:1}),t(o,{color:"MediumTurquoise",vertical:"middle"},{default:n(()=>[l("Action<NavMarker>")]),_:1}),l(),se,l(";")]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("静态")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("event")]),_:1}),t(o,{color:"MediumTurquoise",vertical:"middle"},{default:n(()=>[l("Action<NavMarker>")]),_:1}),l(),_e,l(";")])])]),pe,e("ul",null,[e("li",null,[me,l(),ve,l(" 地图图片 "),t(a,{text:"私有",type:"danger"}),t(a,{text:"编辑器公开"})]),e("li",null,[fe,l(),he,l(" 标识根节点 "),t(a,{text:"私有",type:"danger"}),t(a,{text:"编辑器公开"})]),e("li",null,[ke,l(),Me,l(" 小地图节点 "),t(a,{text:"私有",type:"danger"}),t(a,{text:"编辑器公开"})]),e("li",null,[ye,l(),be,l(" 标识配置 "),t(a,{text:"私有",type:"danger"}),t(a,{text:"编辑器公开"})]),e("li",null,[Ie,l(),ge,l(" 地图类型 "),t(a,{text:"公开",type:"tip"}),t(a,{text:"外部不可写"})]),e("li",null,[Ue,l(),xe,l(" 地图类型 "),t(a,{text:"公开",type:"tip"}),t(a,{text:"不可写"}),l(" 返回地图节点的矩形变换大小")]),e("li",null,[Ce,l(),Ne,l(),t(a,{text:"作用不明",type:"note"}),t(a,{text:"公开",type:"tip"}),t(a,{text:"外部不可写"})]),e("li",null,[we,l(),Be,l(),t(a,{text:"作用不明",type:"note"}),t(a,{text:"公开",type:"tip"}),t(a,{text:"外部不可写"})]),e("li",null,[Te,l(),qe,l(" 画布（应该是指rts_Minimap）中心偏移 "),t(a,{text:"公开",type:"tip"}),t(a,{text:"不可写"})]),e("li",null,[Oe,l(),Pe,l(" 画布（应该是指rts_Minimap）缩放 "),t(a,{text:"公开",type:"tip"}),t(a,{text:"不可写"})]),e("li",null,[Re,l(),Ge,l(" 画布（应该是指rts_Minimap）最小边界（可能是BB） "),t(a,{text:"公开",type:"tip"}),t(a,{text:"不可写"})]),e("li",null,[Se,l(),Ae,l(" 画布（应该是指rts_Minimap）最大边界（可能是BB） "),t(a,{text:"公开",type:"tip"}),t(a,{text:"不可写"})]),e("li",null,[De,l(),Ve,l(),t(a,{text:"作用不明",type:"note"}),t(a,{text:"公开",type:"tip"}),t(a,{text:"不可写"})]),e("li",null,[je,l(),Le,l(),t(a,{text:"作用不明",type:"note"}),t(a,{text:"公开",type:"tip"}),t(a,{text:"不可写"})]),e("li",null,[Fe,l(),ze,l(),t(a,{text:"作用不明",type:"note"}),t(a,{text:"公开",type:"tip"}),t(a,{text:"不可写"})]),e("li",null,[We,l(),He,l(" 标识：标识UI 键值对 "),t(a,{text:"私有",type:"danger"}),t(a,{text:"不可写"})]),e("li",null,[Ze,l(),Ee,l(" 标识配置字典 "),t(a,{text:"私有",type:"danger"}),t(a,{text:"不可写"})])]),Ye,e("ul",null,[e("li",null,[Je,l(),t(a,{text:"私有",type:"danger"}),t(a,{text:"Unity 生命周期"})])]),Ke,e("ul",null,[e("li",null,[Qe,l(),t(a,{text:"私有",type:"danger"}),t(a,{text:"Unity 生命周期"})])]),Xe,e("ul",null,[e("li",null,[$e,l(),t(a,{text:"私有",type:"danger"}),t(a,{text:"Unity 生命周期"})])]),el,e("ul",null,[e("li",null,[ll,l(),t(a,{text:"私有",type:"danger"}),t(a,{text:"Unity 生命周期"})])]),tl,e("ul",null,[e("li",null,[ol,l(),t(a,{text:"公开",type:"tip"}),t(a,{text:"布尔"})])]),e("blockquote",null,[nl,t(a,{text:"Issue",type:"danger"}),l(" 可为某个Id 的 marker 的添加多个 UI"),al]),e("ul",null,[e("li",null,[dl,l(),t(a,{text:"公开",type:"tip"}),t(a,{text:"布尔"})])]),il,e("ul",null,[e("li",null,[rl,l(),t(a,{text:"私有",type:"danger"})])]),cl,e("ul",null,[e("li",null,[ul,l(),t(a,{text:"私有",type:"danger"})])]),sl,e("ul",null,[e("li",null,[_l,l(),t(a,{text:"公开",type:"tip"}),t(a,{text:"布尔"}),t(a,{text:"重载",type:"warning"})])]),pl,e("ul",null,[e("li",null,[ml,l(),t(a,{text:"公开",type:"tip"}),t(a,{text:"布尔"}),t(a,{text:"重载",type:"warning"})])]),vl,e("ul",null,[e("li",null,[fl,l(),t(a,{text:"公开",type:"tip"})])]),hl,e("ul",null,[e("li",null,[kl,l(),t(a,{text:"公开",type:"tip"})])]),Ml,e("ul",null,[e("li",null,[yl,l(),t(a,{text:"公开",type:"tip"})])]),bl,e("ul",null,[e("li",null,[Il,l(),t(a,{text:"公开",type:"tip"}),t(a,{text:"NavMarkerConfig[]"})])]),gl,e("ul",null,[e("li",null,[Ul,l(),t(a,{text:"公开",type:"tip"}),t(a,{text:"布尔"}),t(a,{text:"重载",type:"warning"})])]),xl,e("ul",null,[e("li",null,[Cl,l(),t(a,{text:"公开",type:"tip"}),t(a,{text:"布尔"}),t(a,{text:"重载",type:"warning"})])]),Nl,e("ul",null,[e("li",null,[wl,l(),t(a,{text:"公开",type:"tip"}),t(a,{text:"布尔"}),t(a,{text:"重载",type:"warning"})])]),Bl,e("ul",null,[e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("uint")]),_:1}),l(),Tl,l(" 标识游戏对象，在场景中使用的标识功能脚本，一个标识功能脚本会有一个对应的标识UI "),t(a,{text:"外部只读"})]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("bool")]),_:1}),l(),ql,l(" 是否激活，非激活时不会Update，但不代表地图上的MarkerUI不显示，想要隐藏需要调用 "),Ol,l(),t(a,{text:"外部只读"})]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("bool")]),_:1}),l(),Pl,l(" 是否显示 "),t(a,{text:"外部只读"})]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumTurquoise",vertical:"middle"},{default:n(()=>[l("Transform")]),_:1}),l(),Rl,l(" 跟踪的目标 "),t(a,{text:"外部只读"})]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"LimeGreen",vertical:"middle"},{default:n(()=>[l("Vector3")]),_:1}),l(),Gl,l(" 跟踪的点（marker的位置可能并非一个物体的所在位置，如玩家在地图上做标记） "),t(a,{text:"外部只读"})]),e("li",null,[t(o,{type:"danger",vertical:"middle"},{default:n(()=>[l("私有")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("float")]),_:1}),l(),Sl,l(" 时长")])]),Al,e("ul",null,[e("li",null,[t(o,{type:"danger",vertical:"middle"},{default:n(()=>[l("私有")]),_:1}),t(o,{color:"MediumTurquoise",vertical:"middle"},{default:n(()=>[l("Action<NavMarkerUI>")]),_:1}),l(),Dl,l("：可在系统内进行设置"),t(a,{text:"尚不明确",type:"note"})]),e("li",null,[t(o,{type:"danger",vertical:"middle"},{default:n(()=>[l("私有")]),_:1}),t(o,{color:"MediumTurquoise",vertical:"middle"},{default:n(()=>[l("Action<NavMarker, NavMarkerUI>")]),_:1}),l(),Vl,l(),t(a,{text:"尚不明确",type:"note"})])]),jl,e("ul",null,[e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("虚")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),Ll,l(" 初始化 ID")]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("虚")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),Fl])]),zl,e("ul",null,[e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("虚")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),Wl]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("虚")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),Hl,l(" 更新")])]),Zl,e("ul",null,[e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("虚")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),El,l(" 当自身对应的 MarkerUI 添加时，一个 Marker 可以对应多个 MarkerUI")])]),Yl,e("ul",null,[e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("虚")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),Jl,l(" 当自身对应的 MarkerUI 移除时，一个 Marker 可以对应多个 MarkerUI")]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),Kl,l(" 设置委托")]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),Ql,l(" 设置当 MarkerUI 添加时对应的操作方法")]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("虚")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),Xl])]),$l,e("ul",null,[e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("虚")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),et,l(" 设置 "),lt]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("虚")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),tt,l(" 设置 "),ot]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),nt,l(" 设置 Icon 图片")]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),at,l(" 设置尺寸，一般 Icon 都是跟着根节点尺寸适应")]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),dt,l(" 设置 Icon 的颜色")]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),it,l(" 设置所有此 Marker 对应的 MarkerUI")])]),rt,e("ul",null,[e("li",null,[t(o,{type:"warning",vertical:"middle"},{default:n(()=>[l("保护")]),_:1}),t(a,{text:"编辑器可见",vertical:"middle"}),t(o,{color:"MediumTurquoise",vertical:"middle"},{default:n(()=>[l("GameObject")]),_:1}),l(),ct,l("：Icon 根节点")]),e("li",null,[t(o,{type:"warning",vertical:"middle"},{default:n(()=>[l("保护")]),_:1}),t(o,{color:"MediumTurquoise",vertical:"middle"},{default:n(()=>[l("Image")]),_:1}),l(),ut,l("：Icon 的图片组件")]),e("li",null,[t(o,{type:"warning",vertical:"middle"},{default:n(()=>[l("保护")]),_:1}),t(o,{color:"MediumTurquoise",vertical:"middle"},{default:n(()=>[l("CanvasGroup")]),_:1}),l(),st,l("：Icon 的 CanvasGroup 组件")]),e("li",null,[t(o,{type:"warning",vertical:"middle"},{default:n(()=>[l("保护")]),_:1}),t(o,{color:"MediumTurquoise",vertical:"middle"},{default:n(()=>[l("RectTransform")]),_:1}),l(),_t,l("：Icon 的 RectTransform 组件")]),e("li",null,[t(o,{type:"warning",vertical:"middle"},{default:n(()=>[l("保护")]),_:1}),t(o,{color:"MediumTurquoise",vertical:"middle"},{default:n(()=>[l("NavMapUI")]),_:1}),l(),pt,l("：自身所在的 MapUI")]),e("li",null,[t(o,{type:"warning",vertical:"middle"},{default:n(()=>[l("保护")]),_:1}),t(o,{color:"MediumTurquoise",vertical:"middle"},{default:n(()=>[l("NavMarker")]),_:1}),l(),mt,l("：自身对应的 Marker")]),e("li",null,[t(o,{type:"warning",vertical:"middle"},{default:n(()=>[l("保护")]),_:1}),t(o,{color:"LimeGreen",vertical:"middle"},{default:n(()=>[l("Vector3")]),_:1}),l(),vt,l(),t(a,{text:"尚不明确",type:"note"})]),e("li",null,[t(o,{type:"warning",vertical:"middle"},{default:n(()=>[l("保护")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("bool")]),_:1}),ft,l(),t(a,{text:"尚不明确",type:"note"})]),e("li",null,[t(o,{type:"warning",vertical:"middle"},{default:n(()=>[l("保护")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("float")]),_:1}),l(),ht,l(),t(a,{text:"尚不明确",type:"note"})])]),kt,e("ul",null,[e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("虚")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),Mt,l("：初始化")])]),yt,e("ul",null,[e("li",null,[t(o,{type:"warning",vertical:"middle"},{default:n(()=>[l("保护")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("虚")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),bt,l("：重置自身")]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("虚")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),It])]),gt,e("ul",null,[e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("虚")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),Ut]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("虚")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),xt])]),Ct,e("ul",null,[e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"MediumPurple",vertical:"middle"},{default:n(()=>[l("虚")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),Nt])]),wt,e("ul",null,[e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),Bt,l("：设置目标世界坐标位置")]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),Tt,l("：设置 Root 的角度")])]),qt,e("ul",null,[e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),Ot,l("：设置 Icon 图片")]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),Pt,l("：设置尺寸，一般 Icon 都是跟着根节点尺寸适应")]),e("li",null,[t(o,{type:"tip",vertical:"middle"},{default:n(()=>[l("公开")]),_:1}),t(o,{color:"CornflowerBlue",vertical:"middle"},{default:n(()=>[l("void")]),_:1}),l(),Rt,l("：设置Icon的颜色")])]),Gt])}const Lt=r(_,[["render",St],["__file","NavMap.html.vue"]]);export{Lt as default};
